@page "/facturacion"
@using TecnologyStoreApp.Data
@using Microsoft.AspNetCore.Components.Forms

<h1 style="color: #0974f1;text-align:center; font-family:sans-serif;">
    F a c t u r a c i ó n
</h1>
<br />
<div class="row" style="background-color: whitesmoke;font-weight:bold;">
    <div class="col" style="background-color:darkgray; width:300px;height:380px;border-radius:7px;">
        <div class="producto">
            <img class="img-fluid" style="background-size:cover; width:100%;height:350px;border-radius:7px;margin-top:15px;" src="@selectedImageUrl" alt="Seleccione producto" />
        </div>
    </div>
    <div class="col" style="height:100%;border-radius:7px;">
        <h4>Detalles de la compra</h4>
        <h4>Seleccione su producto</h4>
        <select class="form-select mb-3" @onchange="ChangeImage">
            @foreach (var imagen in imagenesDisponibles)
            {
                <option value="@imagen.Url">@imagen.Nombre</option>
            }
        </select>
        <div style="margin:5px;">
            <label>Nombre del Cliente:</label>
            <InputText @bind-Value="detallesFactura.nombreCliente" />
        </div>
        <div style="margin:5px;">
            <label>Dirección de Entrega:</label>
            <InputText @bind-Value="detallesFactura.direccionEntrega" />
        </div>
        <div style="margin:5px;">
            <label>Producto seleccionado:</label>
            <InputText @bind-Value="detallesFactura.nombreProductoSeleccionado" readonly />
        </div>

        <div style="margin:5px;">
            <label>Color:</label>
            <select @bind="detallesFactura.colorSeleccionado">
                @foreach (var color in coloresDisponibles)
                {
                    <option value="@color">@color</option>
                }
            </select>
        </div>
        <div style="margin:5px;">
            <label>Cantidad:</label>
            <InputNumber @bind-Value="detallesFactura.cantidadSeleccionada" @oninput="CalcularTotal" min="1" />
        </div>
        <div style="margin:5px;">
            <label>Precio:</label>
            <InputText @bind-Value="precioProductoSeleccionadoString" readonly />
        </div>
        <div style="margin:5px;">
            <label>Total a pagar:</label>
            <InputText @bind-Value="totalAPagarString" readonly />
        </div>
        <div style="margin:5px;">
            <label>Método de Pago:</label>
            <select @bind="detallesFactura.metodoPago">
                <option value="@efectivo">Efectivo</option>
                <option value="@tarjeta">Tarjeta</option>
            </select>
        </div>
        <div class="form-group">
            <button @onclick="EnviarInformacion" class="btn btn-primary">Enviar Información</button>
        </div>
        <a href="/Smartphones" class="btn btn-danger"> Cancelar</a>
    </div>
</div>

@code {

    DetallesFactura detallesFactura = new DetallesFactura();
    Metodos metodos = new Metodos();

    private string selectedImageUrl;
    private decimal precioProductoSeleccionado;
    private decimal totalAPagar;
    private string precioProductoSeleccionadoString;
    private string totalAPagarString;
    private string efectivo = "Efectivo";
    private string tarjeta = "Tarjeta";


    // Lista de imágenes disponibles
    private List<ImagenDisponible> imagenesDisponibles = new List<ImagenDisponible>
    {
        new ImagenDisponible { Nombre = "iPhone 14 Plus 256GB", Url = "https://mobile-city.pl/pol_pl_Apple-iPhone-14-6-128GB-5G-Ksiezycowa-Poswiata-Starlight-35329_1.jpg", Precio = 13500 },
        new ImagenDisponible { Nombre = "Samsung Galaxy A54", Url = "https://techpuls360.com/wp-content/uploads/2023/03/6411903c327e4-1-scaled.jpg", Precio = 10500 },
        // Agrega más imágenes según sea necesario
    };

    // Lista de colores disponibles
    private List<string> coloresDisponibles = new List<string> { "Negro", "Blanco", "Dorado" };

    // Clase para representar las imágenes disponibles
    public class ImagenDisponible
    {
        public string Nombre { get; set; }
        public string Url { get; set; }
        public decimal Precio { get; set; }
    }

    // Función para cambiar la imagen seleccionada y actualizar el nombre del producto
    private void ChangeImage(ChangeEventArgs e)
    {
        var selectedImageUrl = e.Value.ToString();
        selectedImageUrl = selectedImageUrl.Replace("Microsoft.AspNetCore.Components.Web.", ""); // Corrige el prefijo agregado por Blazor
        this.selectedImageUrl = selectedImageUrl;

        // Obtener el nombre del producto y su precio seleccionado
        var selectedImage = imagenesDisponibles.FirstOrDefault(i => i.Url == selectedImageUrl);
        if (selectedImage != null)
        {
            detallesFactura.nombreProductoSeleccionado = selectedImage.Nombre;
            precioProductoSeleccionado = selectedImage.Precio;
            precioProductoSeleccionadoString = precioProductoSeleccionado.ToString(); // Convertir a cadena
            CalcularTotal(); // Llama a CalcularTotal después de establecer el producto seleccionado
        }
    }

    private void CalcularTotal()
    {
        totalAPagar = detallesFactura.cantidadSeleccionada * precioProductoSeleccionado;
        totalAPagarString = totalAPagar.ToString(); // Convertir a cadena
    }

    async Task EnviarInformacion()
    {
        try
        {
            detallesFactura.totalApagar = totalAPagar; // Cambiado de totalApagar a totalAPagar
            await metodos.InsertarDetallesFacturaAsync(detallesFactura);

            // Limpiar los campos después de enviar la información
            detallesFactura = new DetallesFactura();
            // NavigationManager.NavigateTo("/otrapagina");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al enviar información: {ex.Message}");
        }
    }

}




